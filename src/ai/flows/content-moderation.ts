// This is an autogenerated file from Firebase Studio.

'use server';

/**
 * @fileOverview Implements an AI-powered content moderation flow for detecting copyright infringements.
 *
 * - moderateContent - A function that moderates user-generated content.
 * - ModerateContentInput - The input type for the moderateContent function.
 * - ModerateContentOutput - The return type for the moderateContent function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const ModerateContentInputSchema = z.object({
  content: z
    .string()
    .describe('The content to be moderated, such as anime descriptions, comments, or titles.'),
});
export type ModerateContentInput = z.infer<typeof ModerateContentInputSchema>;

const ModerateContentOutputSchema = z.object({
  isInfringement: z
    .boolean()
    .describe('Whether the content is likely to be a copyright infringement.'),
  reason: z
    .string()
    .describe('The reason why the content is considered a copyright infringement.'),
});
export type ModerateContentOutput = z.infer<typeof ModerateContentOutputSchema>;

export async function moderateContent(input: ModerateContentInput): Promise<ModerateContentOutput> {
  return moderateContentFlow(input);
}

const prompt = ai.definePrompt({
  name: 'contentModerationPrompt',
  input: {schema: ModerateContentInputSchema},
  output: {schema: ModerateContentOutputSchema},
  prompt: `You are an AI content moderator for an anime streaming service called "Scythe Net". Your task is to determine if the given content violates copyright laws.

  Content: {{{content}}}

  Determine if the content is a copyright infringement. If it is, explain why. Focus on potential copyright issues related to anime content, such as unauthorized use of characters, scenes, or music.
`,
});

const moderateContentFlow = ai.defineFlow(
  {
    name: 'moderateContentFlow',
    inputSchema: ModerateContentInputSchema,
    outputSchema: ModerateContentOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
